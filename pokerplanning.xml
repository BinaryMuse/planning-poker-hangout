<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="Poker Planning">
    <Require feature="rpc" />
    <Require feature="views" />
  </ModulePrefs>
  <Content type="html">
    <![CDATA[
      <script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>
      <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>
      <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular-sanitize.min.js"></script>

      <div id='app-root'>
        <div ng-controller="DebugController">
        </div>

        <div ng-controller='ModeratorController'>
          <div ng-if="poker.moderator.id == poker.me.id">
            <h1>Moderator Controls</h1>
            <div>
              Points: <input type='text' ng-model='availablePoints' ng-list ng-change='setPoints(availablePoints)'>
            </div>
            <div>
              Current Item Description:<br>
              <textarea ng-model="description" ng-change="setDescription(description)"></textarea>
            </div>
            <div>
              Votes revealed: <input type='checkbox' ng-model='votesRevealed' ng-change='setPointsRevealed(votesRevealed)'>
            </div>
          </div>

          <div ng-if="poker.moderator.id != poker.me.id">
            <button ng-click='becomeModerator()'>Become Moderator</button>
          </div>
        </div>

        <div ng-controller="VoteController">
          {{ poker.description.text | linky }}
        </div>

        <div ng-controller="ParticipantsController">
          <ul>
            <li ng-repeat="person in poker.participants">
              {{ person.person.displayName }} -
              <span ng-if="!poker.votesRevealed.value">
                <span ng-show="!poker.votes[person.id]">...</span>
                <span ng-show="poker.votes[person.id]">voted</span>
              </span>

              <span ng-if="poker.votesRevealed.value">
                {{ poker.votes[person.id] }}
              </span>
            </li>
          </ul>
        </div>
      </div>

      <script>
      var app = angular.module('planning-poker', []);

      app.factory('poker', function() {
        return {
          participants: [],
          availablePoints: [0, 1, 2, 3, 5, 8, 13],
          moderator: { id: null },
          description: { text: null },
          votesRevealed: { value: false },
          votes: {}
        };
      });

      app.run(function($log, $rootScope, poker) {
        $log.debug('planning poker started');

        $rootScope.$apply(function() {
          poker.participants = gapi.hangout.getParticipants();
          poker.me = gapi.hangout.getLocalParticipant();
        });

        gapi.hangout.data.onStateChanged.add(function(event) {
          $rootScope.$apply(function() {
            var state = gapi.hangout.data.getState();
            for (key in state) {
              poker[key] = angular.fromJson(state[key]);
            }
            $log.debug('State updated to:');
            $log.debug(poker);
          });
        });

        gapi.hangout.onParticipantsChanged.add(function(event) {
          $rootScope.$apply(function() {
            poker.participants = event.participants;
          });
        });
      });

      app.controller('DebugController', function($scope, poker) {
        $scope.poker = poker;
      });

      app.controller('ModeratorController', function($scope, poker) {
        $scope.poker = poker;

        $scope.setPoints = function(points) {
          gapi.hangout.data.setValue('availablePoints', angular.toJson(points));
        };

        $scope.setDescription = function(description) {
          gapi.hangout.data.setValue('description', angular.toJson({text: description}));
        };

        $scope.setVotesRevealed = function(revealed) {
          gapi.hangout.data.setValue('votesRevealed', angular.toJson({value: revealed}));
        };

        $scope.becomeModerator = function() {
          poker.moderator.id = poker.me.id;
          gapi.hangout.data.setValue('moderator', angular.toJson(poker.moderator));
        };
      });

      app.controller('VoteController', function($scope, poker) {
        $scope.poker = poker;
      });

      app.controller('ParticipantsController', function($scope, poker) {
        $scope.poker = poker;
      });

      function initApp() {
        var root = document.getElementById('app-root');
        angular.bootstrap(root, ['planning-poker']);
      }

      gapi.hangout.onApiReady.add(initApp);
      </script>
    ]]>
  </Content>
</Module>
