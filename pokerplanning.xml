<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="Poker Planning">
    <Require feature="rpc" />
    <Require feature="views" />
  </ModulePrefs>
  <Content type="html">
    <![CDATA[
<style>
</style>
<script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular-sanitize.min.js"></script>
<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css">

<div id='app-root' style='margin: 5px;'>
  <div ng-controller="DebugController">
  </div>

  <div ng-controller='ModeratorController'>
    <div ng-if="poker.moderator.id == poker.me.person.id">
      <p class='lead'>Moderator</p>

      <form role="form">
        <div class='form-group'>
          <label for="availablePoints">Point Range</label>
          <input type='text' class='form-control' id='availablePoints' ng-model='poker.availablePoints' ng-list>
        </div>

        <div class='form-group'>
          <textarea class='form-control' id='description' rows='2'
            ng-model="poker.description.text" placeholder='Item Description/Link'></textarea>
        </div>

        <div class='form-group'>
          <div class='checkbox'>
            <label for="votesRevealed">
              <input type='checkbox' ng-model='poker.votesRevealed.value'>
              Show Votes
            </label>
          </div>
        </div>

        <div class='form-group'>
          <button class='btn btn-primary' ng-click="update()">Update</button>
        </div>
      </form>
    </div>

    <div ng-if="poker.moderator.id != poker.me.person.id" class='text-center'>
      <button class='btn btn-default' ng-click='becomeModerator()'>Become Moderator</button>
    </div>

    <hr>
  </div>

  <div ng-controller="VoteController">
    <div>Current item:</div>
    <div ng-bind-html="poker.description.text | linky"></div>

    <div class='btn-group text-center'>
      <button ng-repeat='point in poker.availablePoints' class='btn btn-default'
        ng-click='vote(point)' ng-class="{'btn-primary': point == myVote()}">{{point}}</button>
    </div>
  </div>

  <div ng-controller="ParticipantsController">
    <ul class='list-unstyled'>
      <li ng-repeat="person in poker.participants"
        ng-class="{'text-success': voted(person), 'text-danger': !voted(person)}">
        <span ng-show="!voted(person)" class="glyphicon glyphicon-remove"></span>
        <span ng-show="voted(person)" class="glyphicon glyphicon-ok"></span>
        {{ person.person.displayName }}
        <em ng-if="!poker.votesRevealed.value" class='text-muted'>
          <span ng-show="!voted(person)">...</span>
          <span ng-show="voted(person)">ready</span>
        </em>

        <span ng-if="poker.votesRevealed.value">
          {{ poker.votes[person.person.id] }}
        </span>
      </li>
    </ul>
  </div>
</div>
<script>
var app = angular.module('planning-poker', ['ngSanitize']);

app.factory('poker', function() {
  return {
    participants: [],
    availablePoints: [0, 1, 2, 3, 5, 8, 13],
    moderator: { id: null },
    description: { text: null },
    votesRevealed: { value: false },
    votes: {}
  };
});

app.run(function($log, $rootScope, poker) {
  $log.debug('planning poker started');

  $rootScope.$apply(function() {
    poker.participants = gapi.hangout.getParticipants();
    poker.me = gapi.hangout.getLocalParticipant();
  });

  var updateState = function() {
    $rootScope.$apply(function() {
      var state = gapi.hangout.data.getState();
      for (key in state) {
        poker[key] = angular.fromJson(state[key]);
      }
      $log.debug('State updated to:');
      $log.debug(poker);
      $rootScope.$broadcast('stateChanged', poker);
    });
  };

  gapi.hangout.data.onStateChanged.add(function(event) {
    updateState();
  });

  gapi.hangout.onParticipantsChanged.add(function(event) {
    $rootScope.$apply(function() {
      poker.participants = event.participants;
    });
  });

  setTimeout(updateState);
});

app.controller('DebugController', function($scope, poker) {
  $scope.poker = poker;
});

app.controller('ModeratorController', function($scope, poker) {
  $scope.poker = angular.copy(poker);
  $scope.$on('stateChanged', function(evt, newPoker) {
    $scope.poker = angular.copy(newPoker);
  });

  $scope.update = function() {
    gapi.hangout.data.submitDelta({
      availablePoints: angular.toJson($scope.poker.availablePoints),
      description: angular.toJson($scope.poker.description),
      votesRevealed: angular.toJson($scope.poker.votesRevealed)
    });
  };

  $scope.becomeModerator = function() {
    $scope.poker.moderator.id = poker.me.person.id;
    gapi.hangout.data.setValue('moderator', angular.toJson($scope.poker.moderator));
  };
});

app.controller('VoteController', function($scope, poker) {
  $scope.poker = poker;

  $scope.vote = function(points) {
    votes = angular.copy(poker.votes);
    votes[poker.me.person.id] = parseInt(points, 10);
    gapi.hangout.data.setValue('votes', angular.toJson(votes));
  };

  $scope.myVote = function() {
    return $scope.poker.votes[$scope.poker.me.person.id];
  };

  $scope.voted = function(person) {
    return !isNaN($scope.poker.votes[person.person.id]) && $scope.poker.votes[person.person.id] !== null
  };
});

app.controller('ParticipantsController', function($scope, poker) {
  $scope.poker = poker;
});

function initApp() {
  var root = document.getElementById('app-root');
  angular.bootstrap(root, ['planning-poker']);
}

gapi.hangout.onApiReady.add(initApp);
</script>
]]>
</Content>
</Module>
