<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="Poker Planning">
    <Require feature="rpc" />
    <Require feature="views" />
  </ModulePrefs>
  <Content type="html">
    <![CDATA[
      <script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>
      <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.min.js"></script>

      <div id='app-root'>
        <div ng-controller='TestController'>
          <input type='text' ng-model='availablePoints' ng-list ng-change='setPoints(availablePoints)'>
          <pre>
            {{poker | json}}
          </pre>
        </div>
      </div>

      <script>
      var app = angular.module('planning-poker', []);

      app.factory('planningPoker', function() {
        return {
          participants: [],
          availablePoints: [0, 1, 2, 3, 5, 8, 13]
        };
      });

      app.run(function($log, $rootScope, planningPoker) {
        $log.debug('planning poker started');

        gapi.hangout.data.onStateChanged.add(function(event) {
          $rootScope.$apply(function() {
            var state = gapi.hangout.data.getState();
            for (key in state) {
              planningPoker[key] = angular.fromJson(state[key]);
            }
            $log.debug('State updated to:');
            $log.debug(planningPoker);
          });
        });

        gapi.hangout.onParticipantsChanged.add(function(event) {
          $rootScope.$apply(function() {
            planningPoker.participants = event.participants;
          });
        });
      });

      app.controller('TestController', function($scope, planningPoker) {
        $scope.poker = planningPoker;

        $scope.setPoints = function(points) {
          gapi.hangout.data.setValue('availablePoints', angular.toJson(points));
        };
      });

      function initApp() {
        var root = document.getElementById('app-root');
        angular.bootstrap(root, ['planning-poker']);
      }

      gapi.hangout.onApiReady.add(initApp);
      </script>
    ]]>
  </Content>
</Module>
